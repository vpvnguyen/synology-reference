# qBittorrentvpn - https://github.com/binhex/arch-qbittorrentvpn
# <mkdir /volume1/docker/appdata/qbittorrentvpn>
# start the container, and in your appdata a openvpn folder will be created where you need to place your .ovpn file you got from your VPN provider !!!
# if the qBittorrent GUI isn't visible run "sudo insmod /lib/modules/tun.ko" and if that doesn't fix it also run "sudo insmod /lib/modules/iptable_mangle.ko"
# to make it survive boot => 'Task Scheduler', Select user 'root', event 'Boot-up' and check 'Enabled'. As script enter: "insmod /lib/modules/tun.ko"
# and if needed "insmod /lib/modules/iptable_mangle.ko"
  qbittorrentvpn:
    container_name: qbittorrentvpn
    image: binhex/arch-qbittorrentvpn:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - ${QBITTORRENTVPN_PORT_8080}:8080/tcp
      - ${QBITTORRENTVPN_PORT_8118}:8118/tcp
    privileged: true
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
      - DEBUG=false
      - VPN_ENABLED=${VPN_ENABLE}
      - VPN_CLIENT=openvpn
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=${VPN_PROV}
      - STRICT_PORT_FORWARD=yes
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
      - WEBUI_PORT=${QBITTORRENTVPN_PORT_8080}
      - ENABLE_PRIVOXY=${QBITTORRENTVPN_ENABLE_PRIVOXY}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/binhex-qbittorrentvpn:/config:rw
      - ${DOCKERSTORAGEDIR}/torrents:/data/torrents:rw

